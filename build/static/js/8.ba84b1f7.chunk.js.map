{"version":3,"sources":["shared/components/uiElements/modal.jsx","shared/components/uiElements/ErrorModal.js","shared/components/formElements/imageUpload.jsx","dashboard/pages/projects/addProjet.jsx","dashboard/pages/projects/head.jsx","dashboard/pages/projects/projects.jsx"],"names":["ModalOverlay","className","style","onSubmit","children","header","headerClass","contentClass","footer","footerClass","content","e","preventDefault","ReactDom","createPortal","document","getElementById","Modal","props","show","onClick","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","error","ImageUpload","id","center","onInput","errorText","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","type","display","accept","onChange","pickedFile","fileIsValid","target","files","length","src","alt","current","click","AddProjet","auth","useContext","AuthContext","useHttpClient","isLoading","sendRequest","clearError","link","setLink","useForm","title","value","description","video","image","technologies","githubLink","formState","inputHandler","authSubmitHandler","a","inputs","formData","FormData","append","process","REACT_APP_API_URL","Authorization","token","LoadingSpinner","asOverlay","element","label","validators","VALIDATOR_REQUIRE","width","border","background","padding","margin","name","disabled","Head","textAlign","Projects"],"mappings":"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","file":"static/js/8.ba84b1f7.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from '../navigation/backDrop';\r\nimport './modal.css';\r\n\r\nconst ModalOverlay = ({\r\n    className,\r\n    style,\r\n    onSubmit,\r\n    children,\r\n    header,\r\n    headerClass,\r\n    contentClass,\r\n    footer,\r\n    footerClass\r\n}) => {\r\n    const content = (\r\n        <div className={`modal ${className}`} style={style}>\r\n            <header className={`modal__header ${headerClass}`}>\r\n                <h2>{header}</h2>\r\n            </header>\r\n            <form onSubmit={onSubmit ? onSubmit : e => e.preventDefault()} >\r\n                <div className={`modal__content ${contentClass}`}>\r\n                    {children}\r\n                </div>\r\n                <footer className={`modal__footer ${footerClass}`}>\r\n                    {footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDom.createPortal(content, document.getElementById('modal-hook'))\r\n};\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <Fragment>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={300}\r\n                classNames='modal'\r\n            >\r\n            <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React from 'react';\n\nimport Modal from './modal';\nimport Button from '../formElements/button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport './imageUpload.css';\r\nimport Button from './button';\r\n\r\nconst ImageUpload = ({ id, center, onInput, errorText }) => {\r\n    const filePickerRef = useRef();\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const pickkImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!file) return;\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }, [file])\r\n\r\n    const pickHandler = (e) => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (e.target.files && e.target.files.length === 1) {\r\n            pickedFile = e.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        onInput(id, pickedFile, fileIsValid);\r\n    }\r\n    return (\r\n        <div className='form-control'>\r\n            <input\r\n                id={id}\r\n                ref={filePickerRef}\r\n                type='file'\r\n                style={{ display: 'none' }}\r\n                accept='.jpg, .png, .jpeg'\r\n                onChange={pickHandler}\r\n            />\r\n            <div className={`image-upload ${center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                    {previewUrl && <img src={previewUrl} alt='prv' />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type='button' onClick={pickkImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n            {!isValid && <p><small>{errorText}</small></p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;","import React, { Fragment, useContext, useState } from 'react';\r\nimport ErrorModal from '../../../shared/components/uiElements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/components/uiElements/LoadingSpinner';\r\nimport Input from '../../../shared/components/formElements/input';\r\nimport ImageUpload from '../../../shared/components/formElements/imageUpload';\r\nimport Button from '../../../shared/components/formElements/button';\r\nimport Card from '../../../shared/components/uiElements/card';\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\r\nimport { useForm } from '../../../shared/hooks/form-hook';\r\nimport { VALIDATOR_REQUIRE } from '../../../shared/utils/validator';\r\nimport './addProject.css'\r\nimport { AuthContext } from '../../../shared/context/auth-context';\r\n\r\nconst AddProjet = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [link, setLink] = useState('');\r\n    const [formState, inputHandler] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        video: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        image: {\r\n            value: null,\r\n            isValid: false\r\n        },\r\n        technologies: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        githubLink: {\r\n            value: '',\r\n            isValid: true\r\n        }\r\n    }, false)\r\n\r\n    const authSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        const { title, description, video, image, githubLink, technologies } = formState.inputs;\r\n        const formData = new FormData();\r\n        formData.append('title', title.value);\r\n        formData.append('description', description.value);\r\n        formData.append('video', video.value);\r\n        formData.append('image', image.value);\r\n        formData.append('githubLink', githubLink.value);\r\n        formData.append('technologies', technologies.value)\r\n        formData.append('link', link);\r\n        try {\r\n            await sendRequest(process.env.REACT_APP_API_URL + '/projects',\r\n                'POST',\r\n                formData,\r\n                { Authorization: 'Bearer ' + auth.token }\r\n            )\r\n        } catch (err) { }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className='addproject'>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <form onSubmit={authSubmitHandler}>\r\n\r\n                    <ImageUpload\r\n                        id=\"image\"\r\n                        onInput={inputHandler}\r\n                        errorText='Please provide an image'\r\n                        center />\r\n\r\n                    <Input\r\n                        id='title'\r\n                        element='input'\r\n                        type='text'\r\n                        label='Project Title'\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        id='description'\r\n                        element='input'\r\n                        type='text'\r\n                        label='Description'\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText='Please enter description.'\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        id='video'\r\n                        element='input'\r\n                        type='text'\r\n                        label='Video link'\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText='Error.'\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    <Input\r\n                        id='technologies'\r\n                        element='input'\r\n                        type='text'\r\n                        label='Technologies used'\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText='Error.'\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    <Input\r\n                        id='githubLink'\r\n                        element='input'\r\n                        type='text'\r\n                        label='Github link'\r\n                        validators={[]}\r\n                        errorText='Please enter githublink.'\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <input\r\n                        style={{ width: '100%', border: '1px solid #ccc', background: '#f8f8f8', padding: '0.30rem 0.25rem', margin: '5px auto' }}\r\n                        type='text'\r\n                        name='link'\r\n                        value={link}\r\n                        onChange={(e) => setLink(e.target.value)}\r\n                    />\r\n                    <Button\r\n                        type='submit'\r\n                        disabled={!formState.isValid}\r\n                    >\r\n                        ADD Project\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddProjet;","import React, { Fragment } from 'react';\r\n\r\nconst Head = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1 style={{textAlign:\"center\"}}>\r\n                Add\r\n        <span className=\"text-secondary\"> Project</span>\r\n            </h1>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Head;","import React, { Fragment } from 'react';\r\nimport AddProjet from './addProjet';\r\nimport Head from './head';\r\n\r\nconst Projects = () => {\r\n    return ( \r\n        <Fragment>\r\n        <Head/>\r\n        <AddProjet />\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Projects;"],"sourceRoot":""}