{"version":3,"sources":["user/pages/auth.jsx"],"names":["Auth","auth","useContext","AuthContext","useHttpClient","isLoading","sendRequest","useForm","email","value","isValid","password","formState","inputHandler","authSubmitHandler","e","a","preventDefault","console","log","inputs","process","JSON","stringify","responseData","login","userId","token","className","asOverlay","onSubmit","id","element","type","label","validators","VALIDATOR_EMAIL","errorText","onInput","VALIDATOR_MINLENGTH","disabled"],"mappings":"+PAmFeA,UAvEF,WACT,IAAMC,EAAOC,qBAAWC,KADT,EAEoBC,cAA3BC,EAFO,EAEPA,UAAWC,EAFJ,EAEIA,YAFJ,EAGmBC,YAAQ,CACtCC,MAAO,CACHC,MAAO,GACPC,SAAS,GAEbC,SAAU,CACNF,MAAO,GACPC,SAAS,KAEd,GAZY,mBAGRE,EAHQ,KAGGC,EAHH,KAcTC,EAAiB,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACtBD,EAAEE,iBACFC,QAAQC,IAAIP,EAAUQ,QAFA,EAGMR,EAAUQ,OAA9BZ,EAHc,EAGdA,MAAOG,EAHO,EAGPA,SAHO,kBAKSL,EACvBe,sDACA,OACAC,KAAKC,UAAU,CACXf,MAAOA,EAAMC,MACbE,SAAUA,EAASF,QAEvB,CAAE,eAAgB,qBAZJ,OAKZe,EALY,OAclBvB,EAAKwB,MAAMD,EAAaE,OAAQF,EAAaG,OAd3B,kDAeNT,QAAQC,IAAR,MAfM,0DAAH,sDAqBvB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMS,UAAU,kBACXvB,GAAa,kBAAC,IAAD,CAAgBwB,WAAS,IACvC,8CACA,0BAAMC,SAAUhB,GACZ,kBAAC,IAAD,CACIiB,GAAG,QACHC,QAAQ,QACRC,KAAK,QACLC,MAAM,SACNC,WAAY,CAACC,eACbC,UAAU,8BACVC,QAASzB,IAEb,kBAAC,IAAD,CACIkB,GAAG,WACHC,QAAQ,QACRC,KAAK,WACLC,MAAM,WACNC,WAAY,CAACI,YAAoB,IACjCF,UAAU,iCACVC,QAASzB,IAEb,kBAAC,IAAD,CACIoB,KAAK,SACLO,UAAW5B,EAAUF,SAFzB","file":"static/js/13.d0ffc37f.chunk.js","sourcesContent":["import React, { useContext, Fragment } from 'react';\r\n\r\nimport './auth.css';\r\nimport Card from '../../shared/components/uiElements/card';\r\nimport Input from '../../shared/components/formElements/input';\r\nimport Button from '../../shared/components/formElements/button';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../../shared/utils/validator';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/uiElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, sendRequest } = useHttpClient();\r\n    const [formState, inputHandler] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false)\r\n\r\n    const authSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        console.log(formState.inputs);\r\n        const { email, password } = formState.inputs;\r\n        try {\r\n            const responseData = await sendRequest(\r\n                process.env.REACT_APP_API_URL + '/users/login',\r\n                'POST',\r\n                JSON.stringify({\r\n                    email: email.value,\r\n                    password: password.value\r\n                }),\r\n                { 'Content-Type': 'application/json' },\r\n            )\r\n            auth.login(responseData.userId, responseData.token);\r\n        } catch (err) { console.log(err) }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Card className='authentication'>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Login Required</h2>\r\n                <form onSubmit={authSubmitHandler}>\r\n                    <Input\r\n                        id='email'\r\n                        element='input'\r\n                        type='email'\r\n                        label='E-Mail'\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText='Please enter a valid email.'\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        id='password'\r\n                        element='input'\r\n                        type='password'\r\n                        label='Password'\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorText='Please enter a valid password.'\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Button\r\n                        type='submit'\r\n                        disabled={!formState.isValid}\r\n                    >\r\n                        LOGIN\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Auth;"],"sourceRoot":""}